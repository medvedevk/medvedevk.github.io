!function(e,t){"function"==typeof define&&define.amd?define([],function(){return e.svg4everybody=t()}):"object"==typeof module&&module.exports?module.exports=t():e.svg4everybody=t()}(this,function(){function b(e,t,n){if(n){var i=document.createDocumentFragment(),a=!t.hasAttribute("viewBox")&&n.getAttribute("viewBox");a&&t.setAttribute("viewBox",a);for(var o=n.cloneNode(!0);o.childNodes.length;)i.appendChild(o.firstChild);e.appendChild(i)}}function h(i){i.onreadystatechange=function(){if(4===i.readyState){var n=i._cachedDocument;n||((n=i._cachedDocument=document.implementation.createHTMLDocument("")).body.innerHTML=i.responseText,n.domain=document.domain,i._cachedTarget={}),i._embeds.splice(0).map(function(e){var t=i._cachedTarget[e.id];t||(t=i._cachedTarget[e.id]=n.getElementById(e.id)),b(e.parent,e.svg,t)})}},i.onreadystatechange()}function p(e){for(var t=e;"svg"!==t.nodeName.toLowerCase()&&(t=t.parentNode););return t}return function(e){var s,m=Object(e),t=window.top!==window.self;s="polyfill"in m?m.polyfill:/\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/.test(navigator.userAgent)||(navigator.userAgent.match(/\bEdge\/12\.(\d+)\b/)||[])[1]<10547||(navigator.userAgent.match(/\bAppleWebKit\/(\d+)\b/)||[])[1]<537||/\bEdge\/.(\d+)\b/.test(navigator.userAgent)&&t;var g={},l=window.requestAnimationFrame||setTimeout,f=document.getElementsByTagName("use"),v=0;s&&function e(){for(var t=0;t<f.length;){var n=f[t],i=n.parentNode,a=p(i),o=n.getAttribute("xlink:href")||n.getAttribute("href");if(!o&&m.attributeName&&(o=n.getAttribute(m.attributeName)),a&&o){if(s)if(!m.validate||m.validate(o,a,n)){i.removeChild(n);var r=o.split("#"),d=r.shift(),u=r.join("#");if(d.length){var c=g[d];c||((c=g[d]=new XMLHttpRequest).open("GET",d),c.send(),c._embeds=[]),c._embeds.push({parent:i,svg:a,id:u}),h(c)}else b(i,a,document.getElementById(u))}else++t,++v}else++t}(!f.length||0<f.length-v)&&l(e,67)}()}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
